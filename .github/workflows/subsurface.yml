name: webviz-subsurface

on:
  push:
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI daily and check that tests are working with latest dependencies
    - cron:  '0 0 * * *'

jobs:
  webviz-subsurface:
    # Run on all events defined above, except pushes which are neither to master nor with a substring [deploy test] in commit message
    if: github.event_name != 'push' || github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '[deploy test]')
    runs-on: ubuntu-latest
    env:
      PYTHONWARNINGS: default  # We want to see e.g. DeprecationWarnings
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']

    steps:

    - name: üßπ Remove unused pre-installed software
      run: |
        # https://github.com/actions/virtual-environments/issues/751
        # https://github.com/actions/virtual-environments/issues/709
        sudo apt-get purge p7zip* yarn ruby-full ghc* php7*
        sudo apt-get autoremove
        sudo apt-get clean
        df -h

    - name: üìñ Checkout commit locally
      uses: actions/checkout@v2

    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: üì¶ Install webviz-subsurface with dependencies
      run: |
        pip install --upgrade pip
        if [[ $(pip freeze) ]]; then
          pip freeze | grep -vw "pip" | xargs pip uninstall -y
        fi
        #pip install .
        pip install --pre --upgrade webviz-subsurface
        pip install --pre --upgrade webviz-config webviz-core-components webviz-subsurface-components # Testing against our latest release (including pre-releases)
        

    - name: üì¶ Install test dependencies
      run: |
        pip install .[tests]
        wget https://chromedriver.storage.googleapis.com/$(wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE -q -O -)/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        export PATH=$PATH:$PWD

    - name: üßæ List all installed packages
      run: pip freeze

    - name: üïµÔ∏è Check code style & linting
      run: |
        #black --check webviz_subsurface tests setup.py
        #pylint webviz_subsurface tests setup.py
        #bandit -r -c ./bandit.yml webviz_subsurface tests setup.py
        #isort --check-only webviz_subsurface tests setup.py
        #mypy --package webviz_subsurface

    - name: ü§ñ Run tests
      env:
        # If you want the CI to (temporarily) run against your fork of the testdada,
        # change the value her from "equinor" to your username.
        TESTDATA_REPO_OWNER: equinor
        # If you want the CI to (temporarily) run against another branch than master,
        # change the value her from "master" to the relevant branch name.
        TESTDATA_REPO_BRANCH: master
      run: |
        #git clone --depth 1 --branch $TESTDATA_REPO_BRANCH https://github.com/$TESTDATA_REPO_OWNER/webviz-subsurface-testdata.git
        # Copy any clientside script to the test folder before running tests
        #mkdir ./tests/assets && cp ./webviz_subsurface/_assets/js/* ./tests/assets
        #pytest ./tests --headless --forked --testdata-folder ./webviz-subsurface-testdata
        #rm -rf ./tests/assets
        webviz docs --portable ./docs_build --skip-open

    - name: üìö Update GitHub pages
      if: matrix.python-version == '3.6'
      run: |
        cp -R ./docs_build ../docs_build

        git config --local user.email "webviz-github-action"
        git config --local user.name "webviz-github-action"
        git fetch origin gh-pages
        git checkout --track origin/gh-pages
        git clean -f -f -d -x
        git rm -r *

        cp -R ../docs_build/* .

        git add .

        if git diff-index --quiet HEAD; then
          echo "No changes in documentation. Skip documentation deploy."
        else
          git commit -m "Update Github Pages"
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
        fi
