name: webviz-subsurface

on:
  push:
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI daily and check that tests are working with latest dependencies
    - cron:  '0 0 * * *'

jobs:
  webviz-subsurface:
    # Run on all events defined above, except pushes which are neither to master nor with a substring [deploy test] in commit message
    if: github.event_name != 'push' || github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '[deploy test]')
    runs-on: ubuntu-latest
    env:
      PYTHONWARNINGS: default  # We want to see e.g. DeprecationWarnings
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8']

    steps:

    - name: üßπ Remove unused pre-installed software
      run: |
        # https://github.com/actions/virtual-environments/issues/751
        # https://github.com/actions/virtual-environments/issues/709
        sudo apt-get purge p7zip* yarn ruby-full adoptopenjdk* ghc* php7*
        sudo apt-get autoremove
        sudo apt-get clean
        df -h

    - name: üìñ Checkout commit locally
      uses: actions/checkout@v2

    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: üì¶ Install webviz-subsurface with dependencies
      run: |
        pip install --upgrade pip
        if [[ $(pip freeze) ]]; then
          pip freeze | grep -vw "pip" | xargs pip uninstall -y
        fi
        pip install .
        # There are dependencies which we can't have in setup.py yet due to limitations in internal deployment system ("komodo"):
        pip install libecl ecl2df opm

    - name: üì¶ Install test dependencies
      run: |
        pip install .[tests]
        pip install dash[testing]
        wget https://chromedriver.storage.googleapis.com/$(wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE -q -O -)/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        export PATH=$PATH:$PWD

    - name: üßæ List all installed packages
      run: pip freeze

    - name: üïµÔ∏è Check code style & linting
      run: |
        black --check webviz_subsurface tests setup.py
        pylint webviz_subsurface tests setup.py
        bandit -r -c ./bandit.yml webviz_subsurface tests setup.py
        mypy --package webviz_subsurface --package tests

    - name: ü§ñ Run tests
      env:
        # If you want the CI to (temporarily) run against your fork of the testdada,
        # change the value her from "equinor" to your username.
        TESTDATA_REPO_OWNER: equinor
        # If you want the CI to (temporarily) run against another branch than master,
        # change the value her from "master" to the relevant branch name.
        TESTDATA_REPO_BRANCH: master
      run: |
        webviz certificate
        git clone --depth 1 --branch $TESTDATA_REPO_BRANCH https://github.com/$TESTDATA_REPO_OWNER/webviz-subsurface-testdata.git
        pytest ./tests --headless --forked --testdata-folder ./webviz-subsurface-testdata
        webviz docs --portable ./docs_build --skip-open

    - name: üê≥ Build Docker example image
      run: |
        pip install webviz-config-equinor
        webviz build ./webviz-subsurface-testdata/webviz_examples/webviz-full-demo.yml --portable ./example_subsurface_app --theme equinor
        rm -rf ./webviz-subsurface-testdata
        pushd example_subsurface_app
        # Related to https://github.com/equinor/webviz-config/issues/150:
        echo "RUN pip install --user git+https://github.com/${{ github.repository }}.git@${{ github.ref }}" >> Dockerfile
        # There are dependencies which we can't have in setup.py yet due to limitations in internal deployment system ("komodo"):
        echo "RUN pip install --user libecl ecl2df==0.8.2 opm" >> Dockerfile
        docker build -t webviz/example_subsurface_image:equinor-theme .
        popd

    - name: üê≥ Update Docker Hub example image
      if: github.event_name != 'schedule' && github.ref == 'refs/heads/master' && matrix.python-version == '3.6'
      run: |
        echo ${{ secrets.dockerhub_webviz_token }} | docker login --username webviz --password-stdin
        docker push webviz/example_subsurface_image:equinor-theme

    - name: üê≥ Update review/test Docker example image
      if: github.ref != 'refs/heads/master' && contains(github.event.head_commit.message, '[deploy test]') && matrix.python-version == '3.6'
      run: |
        docker tag webviz/example_subsurface_image:equinor-theme ${{ secrets.review_docker_registry_url }}/${{ secrets.review_container_name }}

        echo ${{ secrets.review_docker_registry_token }} | docker login ${{ secrets.review_docker_registry_url }} --username ${{ secrets.review_docker_registry_username }} --password-stdin
        docker push ${{ secrets.review_docker_registry_url }}/${{ secrets.review_container_name }}

    - name: üö¢ Build and deploy Python package
      if: github.event_name == 'release' && matrix.python-version == '3.6'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_webviz_token }}
      run: |
        python -m pip install --upgrade setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: üìö Update GitHub pages
      if: github.event_name == 'release' && matrix.python-version == '3.6'
      run: |
        cp -R ./docs_build ../docs_build

        git config --local user.email "webviz-github-action"
        git config --local user.name "webviz-github-action"
        git fetch origin gh-pages
        git checkout --track origin/gh-pages
        git clean -f -f -d -x
        git rm -r *

        cp -R ../docs_build/* .

        git add .

        if git diff-index --quiet HEAD; then
          echo "No changes in documentation. Skip documentation deploy."
        else
          git commit -m "Update Github Pages"
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
        fi
